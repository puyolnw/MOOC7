import { useState, useEffect, useMemo } from "react";
import './LessonFaq.css';


interface LessonItem {
  id: number;
  title: string;
  lock: boolean;
  completed: boolean;
  type: 'video' | 'quiz';
  duration: string;
  status?: 'passed' | 'failed' | 'awaiting_review';
  quiz_id?: number;
}

interface SectionData {
  id: number;
  title: string;
  count: string;
  items: LessonItem[];
}

interface SubjectQuiz {
  quiz_id: number;
  title: string;
  description?: string;
  type: "pre_test" | "big_pre_test" | "post_test";
  locked: boolean;
  completed: boolean;
  passed: boolean;
  status: "passed" | "failed" | "awaiting_review" | "not_started";
  score?: number;
  max_score?: number;
}

interface LessonFaqProps {
  onViewChange: (view: 'video' | 'quiz') => void;
  lessonData: SectionData[];
  onSelectLesson: (sectionId: number, itemId: number, title: string, type: 'video' | 'quiz') => void;
  subjectId?: number;
  subjectQuizzes?: SubjectQuiz[];
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° prop ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó‡πÑ‡∏´‡∏ô‡∏≠‡∏¢‡∏π‡πà
  currentLessonId?: string;
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° prop ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° activeAccordion ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
  activeAccordion?: number | null;
  onAccordionChange?: (accordionId: number | null) => void;
  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° prop ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö hierarchical data
  hierarchicalData?: any;
  // ‚úÖ Task 5: ‡∏•‡∏ö payment-related props
  // paymentStatus?: any;
  // onUploadSlip?: (file: File) => Promise<void>;
}

// ‚úÖ Task 5: ‡∏•‡∏ö BankAccount interface ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
// interface BankAccount {
//   bank_name: string;
//   account_name: string;
//   account_number: string;
//   bank_code?: string;
//   branch_name?: string;
//   account_type: string;
//   is_default: boolean;
// }

const LessonFaq = ({ 
  lessonData, 
  onSelectLesson, 
  subjectId,
  subjectQuizzes: externalSubjectQuizzes,
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° prop ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó‡πÑ‡∏´‡∏ô‡∏≠‡∏¢‡∏π‡πà
  // currentLessonId,
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° prop ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° activeAccordion ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
  activeAccordion: externalActiveAccordion,
  onAccordionChange,
  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° prop ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö hierarchical data
  hierarchicalData,
  // ‚úÖ Task 5: ‡∏•‡∏ö payment-related parameters
  // paymentStatus,
  // onUploadSlip
}: LessonFaqProps) => {
  const [activeAccordion, setActiveAccordion] = useState<number | null>(null);
  // ‚úÖ Task 5: ‡∏•‡∏ö bank account related states
  // const [bankAccounts, setBankAccounts] = useState<BankAccount[]>([]);
  // const [loadingBankAccounts, setLoadingBankAccounts] = useState(false);
  // const apiURL = import.meta.env.VITE_API_URL;
  const [subjectQuizzes, setSubjectQuizzes] = useState<SubjectQuiz[]>([]);
  const [loadingQuizzes, setLoadingQuizzes] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);
  // const navigate = useNavigate();

  // ‡πÉ‡∏ä‡πâ controlled accordion ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
  const currentActiveAccordion = useMemo(() => {
    return externalActiveAccordion !== undefined ? externalActiveAccordion : activeAccordion;
  }, [externalActiveAccordion, activeAccordion]);
  
  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° debug log ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏≠‡∏á activeAccordion
  useEffect(() => {
            // console.log("üéØ LessonFaq currentActiveAccordion changed:", currentActiveAccordion);
        // console.log("üéØ LessonFaq externalActiveAccordion:", externalActiveAccordion);
        // console.log("üéØ LessonFaq local activeAccordion:", activeAccordion);
        // console.log("üéØ LessonFaq onAccordionChange exists:", !!onAccordionChange);
  }, [currentActiveAccordion, externalActiveAccordion, activeAccordion, onAccordionChange]);
  
  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠ sync local state ‡∏Å‡∏±‡∏ö external state ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
  useEffect(() => {
    if (externalActiveAccordion !== undefined && externalActiveAccordion !== activeAccordion) {
                  // console.log("üéØ LessonFaq syncing local state with external state:", externalActiveAccordion);
      setActiveAccordion(externalActiveAccordion);
    }
  }, [externalActiveAccordion, activeAccordion]);

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô accordion ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à
  useEffect(() => {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ externalActiveAccordion ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà null ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÑ‡∏ß‡πâ
    if (externalActiveAccordion !== undefined && externalActiveAccordion !== null) {
                  // console.log("üéØ LessonFaq preserving accordion state:", externalActiveAccordion);
      
      // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô accordion ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à
      if (activeAccordion !== externalActiveAccordion) {
                    // console.log("üéØ LessonFaq syncing local accordion state with external:", externalActiveAccordion);
        setActiveAccordion(externalActiveAccordion);
      }
    }
  }, [externalActiveAccordion]);

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô accordion ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á state ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
  useEffect(() => {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ externalActiveAccordion ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà null ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÑ‡∏ß‡πâ‡πÄ‡∏™‡∏°‡∏≠
    if (externalActiveAccordion !== undefined && externalActiveAccordion !== null) {
                  // console.log("üéØ LessonFaq continuously protecting accordion state:", externalActiveAccordion);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ accordion state ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (activeAccordion !== externalActiveAccordion) {
                    // console.log("üéØ LessonFaq accordion state mismatch detected, restoring...");
        // ‚úÖ ‡πÉ‡∏ä‡πâ setTimeout ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô infinite loop
        setTimeout(() => {
          setActiveAccordion(externalActiveAccordion);
        }, 0);
      }
    }
  }, [externalActiveAccordion]); // ‚úÖ ‡∏•‡∏ö activeAccordion ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å dependency array ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô infinite loop
  
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï accordion
  const updateActiveAccordion = (accordionId: number | null) => {
    console.log("üéØ LessonFaq updateActiveAccordion called with:", accordionId);
    console.log("üéØ LessonFaq onAccordionChange exists:", !!onAccordionChange);
    if (onAccordionChange) {
      console.log("üéØ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å onAccordionChange ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å");
      onAccordionChange(accordionId);
    } else {
      console.log("üéØ ‡πÉ‡∏ä‡πâ local state");
      setActiveAccordion(accordionId);
    }
  };



  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡∏•‡πá‡∏≠‡∏Ñ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà)
  const shouldLockLesson = (sectionIndex: number, itemIndex: number) => {
    const section = lessonData[sectionIndex];
    const currentItem = section?.items[itemIndex];
    
    console.log(`üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Ñ: sectionIndex=${sectionIndex}, itemIndex=${itemIndex}`);
    console.log(`üìö Section: ${section?.title}`);
    console.log(`üéØ Current Item:`, currentItem);
    
    if (currentItem && currentItem.type === "quiz") {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const isEndOfChapterQuiz = currentItem.title.includes("‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó") || 
                                 currentItem.title.includes("‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡πÉ‡∏´‡∏ç‡πà") ||
                                 currentItem.title.includes("1.X ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡πÉ‡∏´‡∏ç‡πà") ||
                                 currentItem.title.includes("1.X");
      
      console.log(`üéØ Is End of Chapter Quiz: ${isEndOfChapterQuiz}`);
      console.log(`üéØ Quiz Title: "${currentItem.title}"`);
      
      if (isEndOfChapterQuiz) {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ video ‡πÉ‡∏ô section ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const videosInSection = section.items.filter(item => item.type === "video");
        const hasVideo = videosInSection.length > 0;
        
        console.log(`üìπ Videos in section: ${videosInSection.length}`);
        console.log(`üìπ Has video: ${hasVideo}`);
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ video ‡πÄ‡∏•‡∏¢ ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Ñ
        if (!hasVideo) {
          console.log(`‚úÖ ‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Ñ: ‡πÑ‡∏°‡πà‡∏°‡∏µ video ‡πÉ‡∏ô section ‡∏ô‡∏µ‡πâ`);
          return false;
        }
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ video ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô section ‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const completedVideos = videosInSection.filter(item => item.completed === true);
        const allVideosCompleted = completedVideos.length === videosInSection.length;
        
        console.log(`‚úÖ Completed videos: ${completedVideos.length}/${videosInSection.length}`);
        console.log(`‚úÖ All videos completed: ${allVideosCompleted}`);
        
        // ‡∏ñ‡πâ‡∏≤ video ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Ñ
        if (allVideosCompleted) {
          console.log(`‚úÖ ‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Ñ: video ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß`);
          return false;
        }
        
        // ‡∏•‡πá‡∏≠‡∏Ñ‡∏ñ‡πâ‡∏≤ video ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à
        console.log(`üîí Should lock: video ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à`);
        return true;
      }
    }
    
    console.log(`‚úÖ ‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Ñ: ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó`);
    return false;
  };

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì progress ‡∏à‡∏≤‡∏Å hierarchical data
  const calculateHierarchicalProgress = () => {
    if (!hierarchicalData) {
      return { totalItems: 0, completedItems: 0, progress: 0 };
    }

    let totalItems = 0;
    let completedItems = 0;

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å Big Lessons
    if (hierarchicalData.big_lessons && Array.isArray(hierarchicalData.big_lessons)) {
      hierarchicalData.big_lessons.forEach((bigLesson: any) => {
        // Big Lesson Quiz
        if (bigLesson.quiz) {
          totalItems++;
          if (bigLesson.quiz.progress?.passed) {
            completedItems++;
          }
        }

        // Lessons ‡πÉ‡∏ô Big Lesson
        if (bigLesson.lessons && Array.isArray(bigLesson.lessons)) {
          bigLesson.lessons.forEach((lesson: any) => {
            totalItems++; // Video
            if (lesson.video_completed) {
              completedItems++;
            }

            if (lesson.quiz) {
              totalItems++; // Quiz
              if (lesson.quiz.progress?.passed) {
                completedItems++;
              }
            }
          });
        }
      });
    }

    // Post-test
    if (hierarchicalData.post_test) {
      totalItems++;
      if (hierarchicalData.post_test.progress?.passed) {
        completedItems++;
      }
    }

    const progress = totalItems > 0 ? (completedItems / totalItems) * 100 : 0;
    return { totalItems, completedItems, progress };
  };

  // ‚úÖ ‡πÉ‡∏ä‡πâ hierarchical progress ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤
  const { totalItems, completedItems, progress: overallProgress } = calculateHierarchicalProgress();
  
  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° debug log
  console.log("üéØ LessonFaq received hierarchicalData:", hierarchicalData);
  console.log("üéØ LessonFaq hierarchicalData type:", typeof hierarchicalData);
  console.log("üéØ LessonFaq hierarchicalData keys:", hierarchicalData ? Object.keys(hierarchicalData) : 'null');
  console.log("üéØ LessonFaq calculated progress:", { totalItems, completedItems, overallProgress });
  
  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° console.log ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà user ‡∏Ç‡∏≠
  if (hierarchicalData) {
    console.log("üîç 4.3 ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:", {
      big_lessons: hierarchicalData.big_lessons?.map((bl: any) => ({
        big_lesson_id: bl.id,
        title: bl.title,
        quiz: bl.quiz ? {
          id: bl.quiz.id,
          title: bl.quiz.title,
          status: bl.quiz.progress?.passed ? '‡∏ú‡πà‡∏≤‡∏ô' : 
                 bl.quiz.progress?.awaiting_review ? '‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à' : 
                 bl.quiz.progress?.completed ? '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô' : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥',
          can_take: bl.lessons?.every((l: any) => l.video_completed) || false
        } : null
      })) || []
    });
    
    console.log("üîç 4.4 ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥:", {
      sub_lessons: hierarchicalData.big_lessons?.flatMap((bl: any) => 
        bl.lessons?.map((lesson: any) => ({
          big_lesson_id: bl.id,
          big_lesson_title: bl.title,
          lesson_id: lesson.id,
          lesson_title: lesson.title,
          video_completed: lesson.video_completed === true,
          status: lesson.video_completed ? '‡∏ú‡πà‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'
        })) || []
      ) || []
    });
    
    console.log("üîç 4.5 ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏¢‡πà‡∏≠‡∏¢:", {
      sub_lesson_quizzes: hierarchicalData.big_lessons?.flatMap((bl: any) => 
        bl.lessons?.filter((lesson: any) => lesson.quiz).map((lesson: any) => ({
          big_lesson_id: bl.id,
          big_lesson_title: bl.title,
          lesson_id: lesson.id,
          lesson_title: lesson.title,
          quiz: {
            id: lesson.quiz.id,
            title: lesson.quiz.title,
            status: lesson.quiz.progress?.passed ? '‡∏ú‡πà‡∏≤‡∏ô' : 
                   lesson.quiz.progress?.awaiting_review ? '‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à' : 
                   lesson.quiz.progress?.completed ? '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô' : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥',
            can_take: lesson.video_completed === true
          }
        })) || []
      ) || []
    });
  }

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° hierarchicalData
  useEffect(() => {
    console.group('üì• LessonFaq: hierarchicalData prop changed');
    console.log('üéØ New hierarchicalData:', hierarchicalData);
    console.log('üéØ Is valid:', !!hierarchicalData);
    console.log('üéØ Has big_lessons:', !!(hierarchicalData && hierarchicalData.big_lessons));
    console.log('üéØ Big lessons count:', hierarchicalData?.big_lessons?.length || 0);
    if (hierarchicalData && hierarchicalData.big_lessons) {
      console.log('üéØ Big lessons structure:', hierarchicalData.big_lessons.map((bl: any) => ({
        id: bl.id,
        title: bl.title,
        lessonsCount: bl.lessons?.length || 0
      })));
    }
    console.groupEnd();
  }, [hierarchicalData]);

  // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å parent component
  useEffect(() => {
    if (externalSubjectQuizzes) {
      setSubjectQuizzes(externalSubjectQuizzes);
      setLoadingQuizzes(false);
      setError(null);
      
      // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ override activeAccordion ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ activeAccordion
      // ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà override ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
      if (!onAccordionChange) {
        const preTest = externalSubjectQuizzes.find(q => q.type === "pre_test" || q.type === "big_pre_test");
        if (preTest) {
          setActiveAccordion(-1000);
        }
      }
    } else {
      setSubjectQuizzes([]);
    }
  }, [externalSubjectQuizzes, onAccordionChange]);

  useEffect(() => {
    // ‚úÖ ‡∏•‡∏ö useEffect ‡∏ó‡∏µ‡πà override locked property ‡πÄ‡∏õ‡πá‡∏ô false
    // setSubjectQuizzes(prev => prev.map(quiz => ({
    //   ...quiz,
    //   locked: false // ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏ó‡∏∏‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö pre/post
    // })));
    
    // ‚úÖ Task 5: ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å fetchBankAccounts
    // fetchBankAccounts();
  }, [lessonData]);

  const handleItemClick = (sectionId: number, item: LessonItem, sectionIndex: number, itemIndex: number) => {
    console.log(`üéØ handleItemClick called:`, { sectionId, itemId: item.id, title: item.title, type: item.type });
    
    const isLocked = shouldLockLesson(sectionIndex, itemIndex);
    console.log(`üîí Is locked: ${isLocked}`);
    
    if (isLocked) {
      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó
      const section = lessonData[sectionIndex];
      const videosInSection = section.items.filter(item => item.type === "video");
      const completedVideos = videosInSection.filter(item => item.completed === true);
      
      let message = `üîí ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n\n`;
      message += `üìö ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${section.title}\n`;
      message += `üéØ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ${item.title}\n\n`;
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• video
      if (videosInSection.length > 0) {
        message += `üìπ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ: ${videosInSection.length} ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠\n`;
        message += `‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß: ${completedVideos.length} ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠\n`;
        message += `‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡∏ö: ${videosInSection.length - completedVideos.length} ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠\n\n`;
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ video ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡∏ö
        const incompleteVideos = videosInSection.filter(item => item.completed !== true);
        if (incompleteVideos.length > 0) {
          message += `üìπ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏à‡∏ö:\n`;
          incompleteVideos.forEach((video, index) => {
            message += `   ${index + 1}. ${video.title}\n`;
          });
          message += `\n`;
        }
      }
      
      message += `üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏´‡πâ‡∏à‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó`;
      
      alert(message);
      return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Ñ ‡πÉ‡∏´‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï activeAccordion ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö section ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    updateActiveAccordion(sectionId);
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ onSelectLesson ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á parent component
    onSelectLesson(sectionId, item.id, item.title, item.type);
  };

  // ‡πÅ‡∏õ‡∏•‡∏á SubjectQuiz ‡πÄ‡∏õ‡πá‡∏ô LessonItem ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å onSelectLesson
  const handleSubjectQuizClick = (quiz: SubjectQuiz) => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Ñ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    if (quiz.locked) {
      if (quiz.type === 'post_test') {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ post-test
        const preTest = subjectQuizzes.find(q => q.type === 'pre_test' || q.type === 'big_pre_test');
        let message = "‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n\n";
        
        if (preTest && !preTest.completed) {
          message += "‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô\n";
        }
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö progress ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å item ‡πÉ‡∏ô‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
        // ‚úÖ ‡πÉ‡∏ä‡πâ hierarchical progress ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤
        if (overallProgress < 90) {
          message += `‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 90% (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ${overallProgress.toFixed(1)}%)\n`;
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
        message += `\nüìä ‡∏™‡∏£‡∏∏‡∏õ:\n`;
        message += `‚Ä¢ ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${hierarchicalData?.big_lessons?.length || 0} ‡∏ö‡∏ó\n`;
        message += `‚Ä¢ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalItems} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ${completedItems} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)\n`;
        message += `‚Ä¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°: ${overallProgress.toFixed(1)}%\n`;
        
        alert(message);
      } else {
        alert("‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô");
      }
      return;
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï activeAccordion ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            const specialSectionId = (quiz.type === 'pre_test' || quiz.type === 'big_pre_test') ? -1000 : -2000;
    updateActiveAccordion(specialSectionId);

    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÑ‡∏õ‡∏¢‡∏±‡∏á parent component
    // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏•‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥
    const specialItemId = quiz.quiz_id;
    
    onSelectLesson(specialSectionId, specialItemId, quiz.title, 'quiz');
  };

  const toggleAccordion = (id: number) => {
    console.log("üéØ LessonFaq toggleAccordion called with id:", id);
    console.log("üéØ LessonFaq currentActiveAccordion:", currentActiveAccordion);
    console.log("üéØ LessonFaq externalActiveAccordion:", externalActiveAccordion);
    
    // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î accordion ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å ‡πÅ‡∏•‡∏∞ accordion ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î
    if (onAccordionChange && externalActiveAccordion === id) {
      console.log("üéØ LessonFaq preventing accordion close - controlled by parent");
      return;
    }
    
    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î accordion ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î accordion ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    if (onAccordionChange) {
      console.log("üéØ LessonFaq opening new accordion:", id);
      onAccordionChange(id);
      return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
    const newState = currentActiveAccordion === id ? null : id;
    console.log("üéØ LessonFaq setting accordion to:", newState);
    updateActiveAccordion(newState);
    
    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô accordion ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à
    setTimeout(() => {
      if (activeAccordion !== newState && newState !== null) {
        console.log("‚ö†Ô∏è Accordion state was unexpectedly changed, restoring...");
        // ‚úÖ ‡πÉ‡∏ä‡πâ setTimeout ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô infinite loop
        setTimeout(() => {
          setActiveAccordion(newState);
        }, 0);
      }
    }, 50);
  };

  // ‚úÖ Task 5: ‡∏•‡∏ö fetchBankAccounts function ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
  // const fetchBankAccounts = async () => {
  //   try {
  //     setLoadingBankAccounts(true);
  //     const response = await axios.get(`${apiURL}/api/bank-accounts/active`);
  //     
  //     if (response.data.success) {
  //       setBankAccounts(response.data.bankAccounts);
  //     }
  //   } catch (error) {
  //     console.error("Error fetching bank accounts:", error);
  //   } finally {
  //     setLoadingBankAccounts(false);
  //   }
  // };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö render ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö accordion ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const renderQuizSection = (quiz: SubjectQuiz, sectionId: number) => {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à"
    const getQuizStatus = (quiz: SubjectQuiz) => {
      if (quiz.status === 'awaiting_review') {
        return {
          status: 'awaiting_review',
          text: '‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à',
          icon: 'fas fa-clock text-warning',
          className: 'status-awaiting',
          description: '‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ï‡∏£‡∏ß‡∏à‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô'
        };
      } else if (quiz.status === 'passed') {
        return {
          status: 'passed',
          text: '‡∏ú‡πà‡∏≤‡∏ô',
          icon: 'fas fa-check-circle text-success',
          className: 'status-passed',
          description: '‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÅ‡∏•‡πâ‡∏ß'
        };
      } else if (quiz.status === 'failed') {
        return {
          status: 'failed',
          text: '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô',
          icon: 'fas fa-times-circle text-danger',
          className: 'status-not-passed',
          description: '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå'
        };
      } else {
        return {
          status: 'not_started',
          text: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°',
          icon: 'fas fa-circle text-muted',
          className: 'status-not-passed',
          description: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö'
        };
      }
    };

    const status = getQuizStatus(quiz);
    
    return (
      <div key={`${quiz.type}-${quiz.quiz_id}`} className="accordion-item">
        <h2 className="accordion-header">
          <button 
            className={`accordion-button ${currentActiveAccordion === sectionId ? '' : 'collapsed'}`}
            type="button"
            onClick={() => toggleAccordion(sectionId)}
          >
            <span className="section-title">
              {(quiz.type === 'pre_test' || quiz.type === 'big_pre_test') ? 'üéØ ' : 'üèÅ '}{quiz.title}
            </span>
            <span className={`section-status ${status.className}`}>
              <i className={status.icon}></i>
              {status.text}
            </span>
          </button>
        </h2>
        <div 
          id={`collapse${sectionId}`} 
          className={`accordion-collapse collapse ${currentActiveAccordion === sectionId ? 'show' : ''}`}
        >
          <div className="accordion-body">
            <ul className="list-wrap">
              <li
                className={`course-item ${quiz.completed ? 'completed' : ''} ${quiz.locked ? 'locked' : ''}`}
                onClick={() => handleSubjectQuizClick(quiz)}
                style={{ cursor: quiz.locked ? 'not-allowed' : 'pointer' }}
              >
                <div className="course-item-link">
                  <span className="item-name">
                    {quiz.locked && <i className="fas fa-lock lock-icon me-2"></i>}
                    {quiz.title}
                  </span>
                  <span className={`item-status ${status.className}`}>
                    <i className={status.icon}></i>
                    {status.text}
                  </span>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    );
  };

  // ‚úÖ ‡∏•‡∏ö useEffect ‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏Å‡∏±‡∏ô - ‡πÉ‡∏´‡πâ parent component ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° accordion state ‡πÅ‡∏ó‡∏ô
  // useEffect(() => {
  //   console.log("üéØ LessonFaq useEffect - currentLessonId:", currentLessonId);
  //   
  //   // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ override accordion state ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
  //   if (onAccordionChange) {
  //     console.log("üéØ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° accordion ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å - ‡πÑ‡∏°‡πà override state");
  //     return;
  //   }
  //   
  //   // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ currentLessonId ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î accordion ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  //   if (currentLessonId) {
  //     const [sectionId] = currentLessonId.split("-").map(Number);
  //     console.log("üéØ ‡πÅ‡∏¢‡∏Å sectionId:", sectionId);
  //     
  //     // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  //     if (sectionId < 0) {
  //       // ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô/‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  //       console.log("üéØ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏© - ‡πÄ‡∏õ‡∏¥‡∏î accordion:", sectionId);
  //       updateActiveAccordion(sectionId);
  //       return;
  //     }
  //     
  //       // ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ - ‡πÄ‡∏õ‡∏¥‡∏î accordion ‡∏Ç‡∏≠‡∏á section ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  //       console.log("üéØ ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ - ‡πÄ‡∏õ‡∏¥‡∏î accordion:", sectionId);
  //       updateActiveAccordion(sectionId);
  //       return;
  //     }
  //     
  //     // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ currentLessonId (‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô) ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ logic ‡πÄ‡∏î‡∏¥‡∏°
  //     // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  //     const preTest = externalSubjectQuizzes?.find(q => q.type === "pre_test" || q.type === "big_pre_test");
  //     
  //     if (preTest) {
  //       // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏Ñ‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  //       console.log("üéØ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô - ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô");
  //       updateActiveAccordion(-1000);
  //     } else if (lessonData.length > 0) {
  //       // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏Ñ‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à
  //       for (const section of lessonData) {
  //         for (const item of section.items) {
  //           if (!item.completed) {
  //             console.log("üéØ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô - ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à:", section.id);
  //             updateActiveAccordion(section.id);
  //             return;
  //           }
  //         }
  //       }
  //       // ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏Ñ‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ô‡πÅ‡∏£‡∏Å
  //       console.log("üéØ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô - ‡∏ó‡∏∏‡∏Å‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏Ñ‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ô‡πÅ‡∏£‡∏Å");
  //       updateActiveAccordion(lessonData[0].id);
  //     }
  //   }, [currentLessonId, lessonData, externalSubjectQuizzes, onAccordionChange]);

  return (
    <div className="accordion" id="accordionExample">
      {/* Loading */}
      {loadingQuizzes && (
        <div className="loading-container text-center p-3">
          <div className="spinner-border spinner-border-sm text-primary" role="status">
            <span className="visually-hidden">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</span>
          </div>
          <span className="ms-2">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö...</span>
        </div>
      )}

      {/* Error */}
      {error && (
        <div className="alert alert-danger" role="alert">
          <i className="fas fa-exclamation-triangle me-2"></i>
          {error}
          <button 
            type="button" 
            className="btn btn-sm btn-outline-danger ms-2"
            onClick={() => window.location.reload()}
          >
            ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
          </button>
        </div>
      )}

      {/* ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô */}
      {subjectQuizzes
        .filter(quiz => quiz.type === "pre_test" || quiz.type === "big_pre_test")
        .map((quiz) => {
          // ‚úÖ ‡πÉ‡∏ä‡πâ hierarchical data ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á Pre-test
          // Pre-test ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô hierarchical structure ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
          // ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å subjectQuizzes ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
          
          return renderQuizSection(quiz, -1000);
        })}
      {/* ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ */}
      {lessonData.map((section, sectionIndex) => {
        // ‚úÖ ‡πÉ‡∏ä‡πâ hierarchical data ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        const bigLesson = hierarchicalData?.big_lessons?.find((bl: any) => bl.id === section.id);
        let sectionStatus = "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô";
        let sectionCount = "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô";
        
        if (bigLesson) {
          // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á Big Lesson ‡∏à‡∏≤‡∏Å hierarchical data
          let totalItems = 0;
          let completedItems = 0;
          
          // Big Lesson Quiz
          if (bigLesson.quiz) {
            totalItems++;
            if (bigLesson.quiz.progress?.passed) {
              completedItems++;
            }
          }
          
          // Lessons ‡πÉ‡∏ô Big Lesson
          if (bigLesson.lessons && Array.isArray(bigLesson.lessons)) {
            bigLesson.lessons.forEach((lesson: any) => {
              totalItems++; // Video
              if (lesson.video_completed) {
                completedItems++;
              }
              
              if (lesson.quiz) {
                totalItems++; // Quiz
                if (lesson.quiz.progress?.passed) {
                  completedItems++;
                }
              }
            });
          }
          
          const progress = totalItems > 0 ? (completedItems / totalItems) * 100 : 0;
          
          if (progress === 100) {
            sectionStatus = "‡∏ú‡πà‡∏≤‡∏ô";
            sectionCount = "‡∏ú‡πà‡∏≤‡∏ô";
          } else if (progress > 0) {
            sectionStatus = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô";
            sectionCount = `${progress.toFixed(0)}%`;
          }
        }
        
        return (
          <div key={section.id} className="accordion-item">
            <h2 className="accordion-header">
              <button 
                className={`accordion-button ${currentActiveAccordion === section.id ? '' : 'collapsed'}`}
                type="button"
                onClick={() => toggleAccordion(section.id)}
              >
                <span className="section-title">{section.title}</span>
                <span className={`section-status ${
                  sectionStatus === "‡∏ú‡πà‡∏≤‡∏ô" ? "status-passed" : 
                  sectionStatus === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô" ? "status-awaiting" : "status-not-passed"
                }`}>
                  {sectionCount}
                </span>
              </button>
            </h2>
            <div 
              id={`collapseOne${section.id}`} 
              className={`accordion-collapse collapse ${currentActiveAccordion === section.id ? 'show' : ''}`}
            >
              <div className="accordion-body">
                <ul className="list-wrap">
                  {section.items.map((item, itemIndex) => {
                    // ‚úÖ ‡πÉ‡∏ä‡πâ hierarchical data ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                    const bigLesson = hierarchicalData?.big_lessons?.find((bl: any) => bl.id === section.id);
                    let itemCompleted = item.completed;
                    let itemStatus = item.completed ? "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô" : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à";
                    
                    if (bigLesson) {
                      if (item.type === "video") {
                        // ‡∏´‡∏≤ lesson ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö item
                        const lesson = bigLesson.lessons?.find((l: any) => l.id === item.id);
                        if (lesson) {
                          itemCompleted = lesson.video_completed === true;
                          itemStatus = itemCompleted ? "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô" : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à";
                        }
                      } else if (item.type === "quiz") {
                        // ‡∏´‡∏≤ quiz ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö item
                        const lesson = bigLesson.lessons?.find((l: any) => l.quiz?.id === item.id);
                        if (lesson?.quiz) {
                          itemCompleted = lesson.quiz.progress?.passed === true;
                          itemStatus = itemCompleted ? "‡∏ú‡πà‡∏≤‡∏ô" : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô";
                        } else if (bigLesson.quiz?.id === item.id) {
                          // Big Lesson Quiz
                          itemCompleted = bigLesson.quiz.progress?.passed === true;
                          itemStatus = itemCompleted ? "‡∏ú‡πà‡∏≤‡∏ô" : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô";
                        }
                      }
                    }
                    
                    const isLocked = shouldLockLesson(sectionIndex, itemIndex);
                    const isEndOfChapterQuiz = item.type === "quiz" && (
                      item.title.includes("‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó") || 
                      item.title.includes("‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡πÉ‡∏´‡∏ç‡πà") ||
                      item.title.includes("1.X ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡πÉ‡∏´‡∏ç‡πà") ||
                      item.title.includes("1.X")
                    );
                    
                    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏Ñ
                    let lockReason = "";
                    if (isLocked && isEndOfChapterQuiz) {
                      const videosInSection = section.items.filter(item => item.type === "video");
                      const completedVideos = videosInSection.filter(item => item.completed === true);
                      
                      if (completedVideos.length < videosInSection.length) {
                        lockReason = `üìπ ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏´‡πâ‡∏à‡∏ö‡∏Å‡πà‡∏≠‡∏ô (${completedVideos.length}/${videosInSection.length})`;
                      }
                    }
                    
                    return (
                      <li
                        key={item.id}
                        className={`course-item ${itemCompleted ? 'completed' : ''} ${isLocked ? 'locked' : ''}`}
                        onClick={() => handleItemClick(section.id, item, sectionIndex, itemIndex)}
                        style={{ cursor: isLocked ? 'not-allowed' : 'pointer' }}
                        title={isLocked ? lockReason : ''}
                      >
                        <div className="item-content">
                          <div className="item-icon">
                            {item.type === "video" && (
                              <i className={`fas fa-play-circle ${itemCompleted ? 'text-success' : 'text-primary'}`}></i>
                            )}
                            {item.type === "quiz" && (
                              <i className={`fas fa-question-circle ${itemCompleted ? 'text-success' : isLocked ? 'text-warning' : 'text-info'}`}></i>
                            )}
                          </div>
                          <div className="item-details">
                            <div className="item-title">
                              {item.title}
                              {isLocked && (
                                <span className="lock-indicator">
                                  <i className="fas fa-lock text-warning ms-2"></i>
                                </span>
                              )}
                            </div>
                            {isLocked && lockReason && (
                              <div className="lock-reason text-warning small">
                                {lockReason}
                              </div>
                            )}
                            {itemCompleted && (
                              <div className="completion-status text-success small">
                                <i className="fas fa-check-circle me-1"></i>
                                {itemStatus}
                              </div>
                            )}
                          </div>
                        </div>
                      </li>
                    );
                  })}
                </ul>
              </div>
            </div>
          </div>
        );
      })}

      {/* ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô */}
      {subjectQuizzes
        .filter(quiz => quiz.type === "post_test")
        .map((quiz) => {
          // ‚úÖ ‡πÉ‡∏ä‡πâ hierarchical data ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á Post-test
          const postTest = hierarchicalData?.post_test;
          let quizStatus = quiz.status;
          let quizCompleted = quiz.completed;
          let quizPassed = quiz.passed;
          
          if (postTest) {
            quizCompleted = postTest.progress?.completed === true;
            quizPassed = postTest.progress?.passed === true;
            quizStatus = quizPassed ? "passed" : quizCompleted ? "awaiting_review" : "not_started";
          }
          
          // ‡∏™‡∏£‡πâ‡∏≤‡∏á quiz object ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å hierarchical data
          const updatedQuiz = {
            ...quiz,
            completed: quizCompleted,
            passed: quizPassed,
            status: quizStatus
          };
          
          return renderQuizSection(updatedQuiz, -2000);
        })}

      {/* ‚úÖ Task 5: ‡∏•‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠ error */}
        {!loadingQuizzes && subjectQuizzes?.length === 0 && subjectId && !error && (
          <div className="no-quizzes alert alert-info text-center p-3 mb-0" role="alert">
            <i className="fas fa-info-circle me-2"></i>
            ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏µ‡πâ
          </div>
        )}
        {error && (
          <div className="error-message alert alert-danger text-center p-3 mb-0" role="alert">
            <i className="fas fa-exclamation-triangle me-2"></i>
            ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {typeof error === 'string' ? error : '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ'}
          </div>
        )}
    </div>
  );
};

export default LessonFaq;
